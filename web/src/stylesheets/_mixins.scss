@use 'sass:math';

@import 'variables';

/* Colors
------------------------------------------------- */
@function color ($color, $variation) {
  @if map-has-key($color, $variation) {
    @return map-get($color, $variation);
  }

  @warn 'Unknown `#{$variation}` in #{$color}.';
  @return null;
}

/* Grid
------------------------------------------------- */

@function col-width ($gutter-width: $grid-gutter, $cols: $grid-cols, $base: $grid-base) {
  @return floor(math.div($base - $gutter-width * ($cols - 1), $cols));
}

@function grid-width ($n, $gutter-width: $grid-gutter, $cols: $grid-cols, $base: $grid-base) {
  @return (col-width($gutter-width, $cols, $base) * $n) + ($gutter-width * ($n - 1));
}


/* Retina
------------------------------------------------- */

@mixin retina {
  @media (min-resolution: 144dpi),
         (min-resolution: 1.5dppx) {
    @content;
  }
}


/* Responsiveness
------------------------------------------------- */

// Generate utility classes that can be applied at specific breakpoints
@mixin viewport-modifiers {
  &--at-xxs {
    @include at-xxs {
      @content;
    }
  }
  &--at-xs {
    @include at-xs {
      @content;
    }
  }
  &--at-s {
    @include at-s {
      @content;
    }
  }
  &--at-m {
    @include at-m {
      @content;
    }
  }
  &--at-l {
    @include at-l {
      @content;
    }
  }
  &--at-l-2 {
    @include at-l-2 {
      @content;
    }
  }
  &--at-xl {
    @include at-xl {
      @content;
    }
  }
  &--at-xxl {
    @include at-xxl {
      @content;
    }
  }
}


// Mobile to portrait table
@mixin at-xxs {
  @media only screen and (min-width: 360px) {
    @content;
  }
}

@mixin at-xs {
  @media only screen and (min-width: 480px) {
    @content;
  }
}

@mixin at-s {
  @media only screen and (min-width: 615px) {
    @content;
  }
}

// Landscape tablet to small screen
@mixin at-m {
  @media only screen and (min-width: 750px) {
    @content;
  }
}

@mixin at-l {
  @media only screen and (min-width: 885px) {
    @content;
  }
}

@mixin at-l-2 {
  @media only screen and (min-width: 960px) {
    @content;
  }
}

// Small screen to big screen
@mixin at-xl {
  @media only screen and (min-width: 1020px) {
    @content;
  }
}

@mixin at-xxl {
  @media only screen and (min-width: 1100px) {
    @content;
  }
}


/* Animation helpers
------------------------------------------------- */

// Creates the burst field for outline bubbles.
@mixin bubble-burst($bubble-d) {
  $bubble-r: .5 * $bubble-d; // bubble-radius

  $shadow-list: (); // init shadow list
  $n-groups: 7; // number of groups
  $group-base-angle: math.div(360deg, $n-groups);

  @for $i from 0 to $n-groups {
    // current group angle, starting fron 12 o'clock
    $group-curr-angle: $i * $group-base-angle - 90deg;

    // coords of the central point of current group of particles
    $xg: $bubble-r * cos($group-curr-angle);
    $yg: $bubble-r * sin($group-curr-angle);

    // add to shadow list
    $shadow-list: $shadow-list, $xg $yg $c-outline-accent;
  }

  width: 3px;
  height: 3px;
  border-radius: 2px;
  box-shadow: $shadow-list;
  transform: scale(0);
}
